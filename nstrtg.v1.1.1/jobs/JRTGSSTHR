#!/bin/ksh

set -xa

date
export PS4='$SECONDS + '

# #### 06/12/00 #####################################
# SETUP SST 2D-VAR PROCESSING CONTROL SHELL VARIABLES
# ###################################################

####################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=sst

if [[ -z "$envir" || "$envir" != "prod" && "$envir" != "para" && "$envir" != "test" ]] ; then

  . $HOMErtgsst/devscripts/rtgssthr.setup

fi

if [[ $envir = prod ]] ; then
  export DCOM=${DCOM:-${DCOMROOT}/us007003}
elif [[ $envir = para || $envir = test ]] ; then
  export DCOM=${DCOM:-${DCOMROOT}/us007003/$envir}
fi

####################################
# variables that control processing
# Determine variable settings before testing and set them accordingly
#    SENDDBN=YES        Issue DBNet Client Calls
#    SENDCOM=YES        copy files from TMPDIR to $COMOUT
####################################
 
export SENDDBN_GB2=${SENDDBN_GB2:-YES}

export DATA=$DATAROOT/${jobid}
mkdir -p $DATA
cd $DATA 
export TMPDIR=$DATA

export cycle=t${cyc}z

######################
# Set up the UTILITIES
######################
export HOMEutil=$UTILROOT
export EXECutil=$HOMEutil/exec
export FIXutil=$HOMEutil/fix
export PARMutil=$HOMEutil/parm
export USHutil=$HOMEutil/ush

#########################################
# Run setpdy and initialize PDY variables
#########################################
setpdy.sh
. PDY

####################################
# Determine Job Output Name on System
####################################
# JY export pgmout="OUTPUT.${pid}"
export pgmout="OUTPUT.$$"

#################################################
# Specify job's execution areas (directory paths)
#################################################
export EXECrtgsst=${EXECrtgsst:-$HOMErtgsst/exec}
export FIXrtgsst=${FIXrtgsst:-$HOMErtgsst/fix}
export PARMrtgsst=${PARMrtgsst:-$HOMErtgsst/parm}
export USHrtgsst=${USHrtgsst:-$HOMErtgsst/ush}

export HOMEobsproc=${HOMEobsproc:-/nwprod/obsproc_dump.${obsproc_dump_ver}}
export EXECobsproc=${EXECobsproc:-$HOMEobsproc/exec}
export USHobsproc=${USHobsproc:-$HOMEobsproc/ush}

###################################################
# Set directories where this job's input is located
# using the COMIN variable
###################################################
export COMIN=${COMIN:-$COMROOT/${NET}/${envir}/${RUN}.${PDY}}
export COMINm1=${COMINm1:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm1}}
export COMINm2=${COMINm2:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm2}}
export COMINm3=${COMINm3:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm3}}
export COMINm4=${COMINm4:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm4}}
export COMINm5=${COMINm5:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm5}}
export COMINm6=${COMINm6:-$COMROOT/${NET}/${envir}/${RUN}.${PDYm6}}

export COMOUT=${COMOUT:-$COMROOT/${NET}/${envir}/${RUN}.${PDY}}
mkdir -p $COMOUT

#export COM_SEAICE=/gpfs/dell1/nco/ops/com/omb/prod/sice
export COM_SEAICE=$(compath.py omb/prod/sice)

if [ "$envir" = "prod" ];then
  export pcom=${pcom:-${PCOMROOT}/${NET}}
elif [ "$envir" = "para" -o "$envir" = "test" ] ; then
  export pcom=${pcom:-${PCOMROOT}/${envir}/${NET}}
fi

export RUNTYPE=${RUNTYPE:-quasi_prod}

####################################################
############## DATA SELECTION SECTION ##############
####################################################
## For moored buoys:
## export TANK_mbuoy=${TANK_mbuoy:-$DCOM}
## For drifting buoys:
## export TANK_dbuoy=${TANK_dbuoy:-$DCOM}
## For lcman buoys:
## export TANK_lcman=${TANK_lcman:-$DCOM}
## For restricted ships:
## export TANK_ships=${TANK_ships:-$DCOM}
## For all ships:
## export TANK_shpall=${TANK_shpall:-$DCOM}
## For NAVY satellite retrievals:
## export TANK_sstnvh=${TANK_sstnvh:-$DCOM}
## For Physical satellite retrievals:
## export TANK_sstnvp=${TANK_sstnvp:-$DCOM}
## For GOES satellite retrievals:
## export TANK_sstnsg=${TANK_sstnsg:-$DCOM}
## For AMSR-E satellite retrievals:
## export TANK_amsrem=${TANK_amsrem:-$DCOM}
####################################################
############## DATA SELECTION SECTION ##############
####################################################

###############################################

# Execute the script
$HOMErtgsst/scripts/exrtgssthr.sh.ecf
###############################################

cat $pgmout

msg='ENDED NORMALLY.'
postmsg "$jlogfile" "$msg"

if [[ $KEEPDATA != YES && $KEEPDATA != yes ]] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

if [[ $envir != prod && $envir != para && $envir != test ]] ; then
  $HOMErtgsst/devscripts/rtgssthr.wrapup
fi
