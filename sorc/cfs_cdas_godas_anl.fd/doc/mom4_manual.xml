<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
			 "/home/arl/lib/docbk/dtd/docbookx.dtd">

<article lang="en">

<articleinfo>
   <title>The FMS MOM4 User Guide</title>
    <author>
      <firstname>Lori</firstname>
      <surname>Thompson</surname>
      <email>Lori.Thompson@noaa.gov</email>
   </author>
     <author>
      <firstname>Giang</firstname>
      <surname>Nong</surname>
      <email>Giang.Nong@noaa.gov</email>
   </author>
</articleinfo>
<literallayout>
<ulink url="http://www.gfdl.noaa.gov/~gtn/mom4_faq.html">FAQs</ulink>
<ulink url="mom4beta3_email.html">MOM4beta3 email (frozen)</ulink>

<!--
<ulink url="mom4p0_email.html">MOM4p0 email</ulink>
-->

</literallayout>

<section id="introduction">
   <title>Introduction</title>

<section id="what is mom">
   <title>What is MOM?</title>
   <para>
     The Modular Ocean Model (MOM) is a numerical representation of the ocean's
     hydrostatic primitive equations, and it is designed primarily as a tool
     for studying the global ocean climate system. MOM4 is the latest
     version of the GFDL ocean model whose origins date back to the pioneering
     work of Kirk Bryan and Mike Cox in the 1960s-1980s. It is developed and
     supported by researchers at NOAA's Geophysical Fluid Dynamics Laboratory
     (<ulink url="http://www.gfdl.noaa.gov">GFDL</ulink>), with contributions
     also provided by researchers worldwide. 
   </para>
   <para>
     The first release of MOM4 took place January of 2004. There have
     been four releases of this code: MOM4p0a (Jan 2004), MOM4p0b
     (March 2004), MOM4p0c (August 2004), and MOM4p0d (May 2005).
     The developers welcome
     feedback, both positive and negative, on the code's integrity and
     portability as well as documentation.
     It is through such feedback that the code and documentation evolves
     and becomes more robust and user friendly.
   </para>
   <para>
     The purpose of this web guide is to provide general information about
     MOM4 and particular information for how to download and run the code.
   </para>
</section>

<section id="mom4 registration">
   <title>MOM4 registration</title>
   <para>
     MOM4 users can acquire the source code and associated datasets from
     <ulink url="http://fms.gfdl.noaa.gov/">GForge</ulink>, and are required
     to <ulink url="https://fms.gfdl.noaa.gov/account/register.php">register
     </ulink> at the <ulink url="http://fms.gfdl.noaa.gov/">GFDL GForge
     location</ulink>. Therefore, users need to register only once to get both
     the source code and datasets of MOM4. More details can be found in the
     <ulink url="quickstart_guide.html">quickstart_guide.html</ulink>.
   </para>
</section>

<section id="mom4 email list">
   <title>MOM4 email list</title>
   <para>
     Email concerning MOM4 should be directed to the mom4-email list
     located at <email>oar.gfdl.mom4p0@noaa.gov</email>. All
     questions, comments, and suggestions are to be referred to this
     list. An archive of all emails is maintained at the mom4 <ulink
     url="http://fms.gfdl.noaa.gov/mail/?group_id=5">email
     archive</ulink>. A subject-organized archive of the emails is
     available at <ulink url="mom4p0_email.html"/>. Note that by
     registering at GForge to access the code, you are automatically
     subscribed to the email list.
   </para>
</section>

<section id="mom4 release">
   <title>MOM4p0: May 2005</title>
   <para>
     There have been four releases of MOM4p0: (1) MOM4p0a was
     released January 2004, (2) MOM4p0b was released March 2004, and
     (3) MOM4p0c was released August 2004, and (4) MOM4p0d released
     May 2005. Each release is documented on this web page.
     
   </para>
   
</section>  

<section id="ongoing issues">
   <title>Ongoing issues</title>
   <para>
  There are two major algorithm issues that are being addressed by GFDL
developers. (1) Generalized quasi-Eulerian vertical coordinates are
being implemented in MOM4. It is anticipated that MOM4p1a will have
this capability, with a release date hopefully late 2005. (2) Two-way
nesting is being considered for MOM. It is hoped that nesting will be
available also late 2005 or early 2006.
    
   </para>
   <para>
   There remains two general ways to compile mom4: with static allocation
of arrays or dynamic allocation.  Recent work on the SGI machines at
GFDL has reduced the difference in efficiency between these two
compilations.  We understand that on some platforms, the dynamic
allocation actually is better than static.  Such remains an ongoing
issue, as do other elements of code efficiency.  Our general goal is
to provide code that is efficient across a broad range of computer
platforms, but not at the cost of sacrificing portability.  Those who
know they will be working with one particular platform for a period of
time should readily find better ways of coding some parts of mom4 and
the associated FMS code.  If you feel your efficiency improvements are
of a general nature and wish to have them distributed in future MOM4
releases, we would be happy for you to contribute the modified code.
   </para>
</section>     
<section id=" The mom4 community ">
   <title> The mom4 community</title>
      <para>
Since its release in January 2004, there have been nearly 300
registrations with the mom4 distribution, with each registration
generally representing more than one user.  This is a
sizable user community.  For various purposes, it is useful to
tabulate these users.  Click <ulink url="http://www.gfdl.noaa.gov/~gtn/mom4_users.html">
here</ulink> to download an updated table of users.
</para>
</section>     
</section>

<section id="mom4 details">
   <title>Details of MOM4</title>

<section id="mom4 docs">
   <title>Documentation</title>
   <para>
     In addition to this user guide, documentation for MOM4 is provided by two
     LaTeX generated postscript documents:
     <orderedlist>
       <listitem>
       <ulink
       url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">
       A Technical Guide to MOM4</ulink> by
       <email>Stephen.Griffies@noaa.gov</email>,
       <email>Matthew.Harrison@noaa.gov</email>,
       <email>Ronald.Pacanowski@noaa.gov</email>, and
       <email>Tony.Rosati@noaa.gov</email>. This is the primary reference for
       MOM4. It contains details about some of the numerical algorithms and
       diagnostics. All usage of MOM4 in the literature should refer to this
       document:
       <literallayout>
         A Technical Guide to MOM4
         GFDL Ocean Group Technical Report No. 5
         S.M. Griffies, M.J. Harrison, R.C. Pacanowski, and A. Rosati
         NOAA/Geophysical Fluid Dynamics Laboratory
         Available on-line at <ulink url="http://www.gfdl.noaa.gov/~fms"/>.
       </literallayout>
       </listitem>
       <listitem>
         A theoretical rationalization of ocean climate models is
         provided by
         <ulink url="http://pup.princeton.edu/titles/7797.html">
         Fundamentals of Ocean Climate Models</ulink>. This book has
         been published by Princeton University Press, August 2004.  
       </listitem>
     </orderedlist>
   </para>
</section>
<section id="Complete tree of embedded documentation">
   <title>Complete tree of embedded documentation</title>

      The documentation of most Fortran modules in FMS is inserted right
      in the source code to ensure consistency between the code and
      documentaion. A Perl software is used to extract documentation
      from the source code to create a corresponding .html module.
      For example, documentation for
      shared/diag_manager/diag_manager.F90 module is
      shared/diag_manager/diag_manager.html. In general, the embedded
      documentation is a good starting point to understand the Fortran module.
      Here is a
      <ulink url="http://www.gfdl.noaa.gov/~gtn/module_doc.html">complete tree </ulink>
      that depicts all documentation of MOM4 code as well as shared code.
                  
</section>
      
<section id="mom4 characteristics">
   <title>Characteristics</title>
   <para>
     Although MOM4 shares much in common with earlier versions of MOM, it
     possesses a number of computational, numerical, and physical
     characteristics that are noteworthy. The following provides an overview
     of the main characteristics of MOM4 (please refer to
     <ulink
     url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">
     A Technical Guide to MOM4</ulink> for references).
   </para>

   <para>
     Computational characteristics of MOM4 include the following. 
   </para>
   
   <itemizedlist>
   
     <listitem>
       MOM4 is coded in Fortran 90 and physical units are MKS.
     </listitem>
     
     <listitem>
       MOM4 meets the code standards set by the GFDL Flexible Modeling System
       (<ulink url="http://www.gfdl.noaa.gov/~fms">FMS</ulink>). It also
       utilizes a substantial number of software infrastructure modules shared
       by other FMS-based models. In particular, all I/O (e.g., restarts,
       forcing fields, initial fields) is handled via
       <ulink
       url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>.
       </listitem>
       
     <listitem>
       There is only a single cpp-preprocessor option (i.e.,
       <option>ifdefs</option>) associated with the handling of memory
       in the model. All options for physical and dynamical choices
       are handled via namelists and/or switching in/out of modules at
       compile time. Removing
       <option>ifdefs</option> allows for more readable code that possesses a
       higher level of error checker handling.
     </listitem>
     
     <listitem>
       2D (latitudinal/longitudinal) horizontal domain decomposition is used
       for single or multiple parallel processors. Correspondingly, 3D arrays
       are dimensioned (i,j,k) instead of (i,k,j) used in earlier MOMs. MOM4
       has no memory window or slabs.
     </listitem>

  </itemizedlist>     

   <para>
    Numerical and kinematic/dynamic characteristics of MOM4 include the
    following.
   </para>

   <itemizedlist>
     
     <listitem>
       Generalized orthogonal horizontal coordinates are used. GFDL is
       supporting both the standard spherical coordinates as well as
       the ''tripolar'' grid of Murray (1996).  Details are provided
       in
       <ulink
       url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">
       A Technical Guide to MOM4</ulink>.
     </listitem>
     
     <listitem>
       Bottom topography is represented using the partial cells of Pacanowski
       and Gnanadesikan (1998). The older full cell approach is available as a
       namelist in the preprocessing code used to generate the grid
       specification file.
     </listitem>

     <listitem>
       The dynamics/kinematics for MOM4p0a and MOM4p0b are based on
       the non-Boussinesq method of Greatbatch et al. (2002). The
       Boussinesq option is available via a namelist.  This option was
       jettisoned in MOM4p0c for purposes of code brevity, and in
       anticipation of using pressure coordinates in MOM4p1 to realize
       non-Boussinesq dynamics.
     </listitem>
     
     <listitem>
       The time tendency for tracer and baroclinic velocity can be
       discretized two ways. (1) The first approach uses the
       traditional leap-frog method along with a Robert-Asselin time
       filter. Note that the Euler forward or Euler backward mixing
       time step used in earlier MOMs has been eliminated.  This
       method is avalable in MOM4p0a, MOM4p0b and MOM4p0c. (2) MOM4p0c
       provides an additional method, which is strongly recommended.
       Here, the time tendency is discretized with a two-level forward
       step, which eliminates the need to time filter.  Tracer and
       velocity are staggered in time, thus providing second order
       accuracy in time.  For certain model configurations, this
       scheme is roughly twice as stable as the leap-frog, thus
       allowing for a factor of two in computational savings.  Without
       the time filtering needed with the leap-frog, the new scheme
       conserves total tracer to within numerical roundoff.  This
       scheme shares much in common with time stepping used in the
       Hallberg Isopycnal Model and the MIT GCM.  It is the default in
       MOM4p0c.  Details of both the leap-frog and two-level schemes
       are provided in
       <ulink url="http://pup.princeton.edu/titles/7797.html">
       Fundamentals of Ocean Climate Models</ulink>.
     </listitem>
     
     <listitem>
       The sole external mode solver is a variant of the Griffies et
       al. (2001) explicit free surface. There are two time stepping
       schemes supported: (1) leap-frog and (2) predictor-corrector.
       The predictor-corrector is more stable and is thus the default
       method.  Top model grid cells have time dependent volume, thus
       allowing for total tracer to be conserved to within roundoff.
       The linearized free surface method used in MOM3 (and many other
       implementations of the free surface in z-models) has been
       jettisoned since it precludes tracer conservation.  Details are
       provided in
       <ulink url="http://pup.princeton.edu/titles/7797.html">
       Fundamentals of Ocean Climate Models</ulink>. 
     </listitem>

     <listitem>
       McDougall et al. (2003) equation of state has been implemented,
       with in situ density a function of the local potential
       temperature, salinity, and hydrostatic pressure (baroclinic
       pressure plus free surface pressure plus applied pressure from
       the atmosphere and sea ice). Details are provided in
       <ulink url="http://pup.princeton.edu/titles/7797.html">
       Fundamentals of Ocean Climate Models</ulink>.
     </listitem>
     
     <listitem>
       Tracer advection is available using various schemes.  The
       centered 2nd, 4th, 6th order schemes are available, as
       documented in <ulink
       url="http://www.gfdl.gov/~smg/MOM/web/guide_parent/guide_parent.html">The
       MOM3 Manual of Pacanowski and Griffies (1999)</ulink>.  The 4th
       and 6th order schemes assume constant grid spacing, which
       simplifies the code though compromises accuracy on the more
       commonly used non-uniform grids.  The Quicker scheme documented
       by Holland et al. (1998) and
       <ulink
       url="http://www.gfdl.gov/~smg/MOM/web/guide_parent/guide_parent.html">The
       MOM3 Manual</ulink> is available.  Finally, two
       multi-dimensional flux limited schemes have been ported from
       the MIT GCM.  These schemes are monotonic and have been found to
       be roughly the same cost as the Quicker scheme.  GFDL
       researchers have found the Sweby scheme to be most satisfying
       for many applications, such as biogeochemistry.  Hence, effort
       has been made to enhance this scheme's efficiency in MOM4p0c.
       Other schemes remain much as they were with the MOM4p0a
       release.
     </listitem>

     <listitem>
       Tidal forcing from the various lunar and solar components are
       available to force the free ocean surface.
     </listitem>
     
     <listitem>
       Open boundary conditions are available to allow open boundaries in
       either of the north, south, east, or west directions.
     </listitem>
     
  </itemizedlist>     

   <para>
    Physical parameterizations available in MOM4 include the following. 
   </para>

   <itemizedlist>
     
     <listitem>
       Neutral tracer physics includes Redi neutral diffusion
       according to Griffies et al. (1998), and Gent-McWilliams
       stirring according to the Griffies (1998) skew-flux
       method. Two-dimensional flow dependent diffusivities are
       available and can be determined in many different ways, such as
       the depth integrated Eady growth rate and Rossby radius of
       deformation, as motivated by the ideas of Held and Larichev
       (1996) and Visbeck et al.  (1997).  Details are provided in
       <ulink url="http://pup.princeton.edu/titles/7797.html">
       Fundamentals of Ocean Climate Models</ulink>.
     </listitem>
     
     <listitem>
       Vertical mixing schemes include the time-independent depth profile of
       Bryan and Lewis (1979), the Richardson number dependent scheme of
       Pacanowski and Philander (1981), and the KPP scheme of Large et al.
       (1994).
     </listitem>
     
     <listitem>
       Horizontal friction schemes include uniform and grid dependent
       viscosity schemes, as well as the shear-dependent Smagorinsky
       viscosity according to Griffies and Hallberg (2000). The
       anisotropic scheme of Large et al.  (2001) and Smith and
       McWilliams (2002) has been implemented. Details are provided in
       <ulink url="http://pup.princeton.edu/titles/7797.html">
       Fundamentals of Ocean Climate Models</ulink>.
     </listitem>
     
     <listitem>
       Topographically oriented tracer diffusion introduces enhanced
       diffusion when heavy parcels are above lighter parcels. It is
       implemented according to the ideas of Beckmann and D&#246;scher
       (1997) and D&#246;scher and Beckmann(1999). Details are
       provided in
       <ulink
       url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">
       A Technical Guide to MOM4</ulink>.
     </listitem>
     
     <listitem>
       The "overflow" scheme of Campin and Goosse (1999) has been implemented,
       whereby gravitationally unstable fluid parcels are allowed to move
       downslope via an upwind advection scheme.
     </listitem>
     
     <listitem>
       Penetration of shortwave radiative heating into the upper ocean is
       generally attenuated by the inclusion of chlorophyll data.
     </listitem>

  </itemizedlist>     

   <para>
    Miscellaneous features of the code released with MOM4 include the
    following.
   </para>

   <itemizedlist>
     
     <listitem>
       MOM4 comes with three tracer packages: (1) ideal age tracer (2)
       tracers for the OCMIP biotic protocol (3) CFC
       tracers. Additionally, a suite of code is available for
       handling tracers inside MOM4 and FMS shared code
       (<filename><ulink
       url="../src/shared/field_manager/field_manager.html">
       field_manager</ulink></filename>). This code provides the user
       with many options for adding new tracer packages, ecosystem
       models, etc. 
     </listitem>
     <listitem>
       MOM4 has numerous diagnostics for checking algorithm and
       solution integrity. These diagnostics include budgets for
       energetic consistency, tracer conservation, solution stability,
       etc. Additional diagnostics are available for numerous fields
       of relevance to the different physics schemes, as well as term
       balances.
     </listitem>
     <listitem>
       MOM4 is distributed with a prognostic sea ice model (SIS) via
       mom4_test4 and mom4_test5. 
      </listitem>
     <listitem>
       As a forward model, MOM4 is compatible with the most recent automatic
       differentiation tool of Ralf Giering and Thomas Kaminski. See their
       FastOpt home page at <ulink url="http://www.FastOpt.com/frameset.html"/>
       for more details.        
     </listitem>
  </itemizedlist>
  
</section>

<section id="mom4 within fms">
   <title>MOM4 and FMS</title>
   <para>
     MOM4 has been coded within GFDL's Flexible Modeling System
     (<ulink url="http://www.gfdl.noaa.gov/~fms">FMS</ulink>). Doing
     so allows for MOM4 developers to use numerous FMS infrastructure
     and superstructure modules that are shared amongst various
     atmospheric, ocean, sea ice, land, vegetative, etc.
     models. Common standards and shared software tools facilitate the
     development of high-end earth system models, which necessarily
     involves a wide variety of researchers working on different
     computational platforms.  Such standards also foster efficient
     input from computational scientists and engineers as they can
     more readily focus on common computational issues.
   </para>
   <para>
     The following list represents a sample of the FMS
     <filename>shared</filename> modules used by MOM4.
     <itemizedlist>
       <listitem><ulink
          url="../src/shared/time_manager/time_manager.html"><filename>time
          manager</filename></ulink>: keeps model time and sets time
          dependent flags
       </listitem>
       <listitem><ulink
          url="../src/coupler/coupler_main.html"><filename>coupler</filename></ulink>:
          used to couple MOM4 to other component models
       </listitem>
       <listitem>
          <ulink url="../src/shared/mpp/mpp_io.html"><filename>I/O</filename>
          </ulink>: to read and write data in either NetCDF, ASCII, or native
          formats 
       </listitem>

       <listitem>
          <ulink
          url="../src/shared/mpp/mpp.html"><filename>parallelization
          tools</filename></ulink>: for passing messages across
          parallel processors
       </listitem>
       <listitem>
          <ulink
          url="../src/shared/diag_manager/diag_manager.html"><filename>diagnostic
          manager</filename></ulink>: to register and send fields to
          be written to a file for later analysis
       </listitem>
       <listitem>
          <ulink
          url="../src/shared/field_manager/field_manager.html"><filename>field
          manager</filename></ulink>: for integrating multiple tracers
          and organizing their names, boundary conditions, and
          advection schemes
       </listitem>
     </itemizedlist>
   </para>
   <para>
     The FMS infrastructure (the "Lima version") has been released
     to the public on <ulink
     url="http://fms.gfdl.noaa.gov/">GForge</ulink>, with further
     releases every few months.
   </para>
   <para>
     The Flexible Modeling System (<ulink url="http://www.gfdl.noaa.gov/~fms">
     FMS</ulink>) is free software; you can redistribute it and/or modify it
     and are expected to follow the terms of the GNU General Public License as
     published by the Free Software Foundation; either version 2 of the
     License, or (at your option) any later version.
   </para>
   <para>
     FMS is distributed in the hope that it will be useful, but WITHOUT ANY
     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
     details.
   </para>
   <para> 
     You should have received a copy of the GNU General Public License along
     with MOM4; if not, write to:
   <literallayout>
     Free Software Foundation, Inc.
     59 Temple Place, Suite 330
     Boston, MA 02111-1307  
     USA
     or see: <ulink url="http://www.gnu.org/licenses/gpl.html"/>
   </literallayout>
   </para>
</section>

<section id="mom4 test cases">
   <title>Test cases</title>
   <para>
     MOM4 is distributed with a set of test cases located in
     <filename>mom4/exp/</filename>. These tests are taken from models used at
     <ulink url="http://www.gfdl.noaa.gov">GFDL</ulink> for testing the
     numerical and computational integrity of the code.
   </para>
   <warning>
     These experiments are <emphasis>NOT</emphasis> sanctioned for their
     physical relevance. They are instead provided for the user to learn how to
     run MOM4, and to verify the numerical and/or computational integrity of
     the code. <emphasis>PLEASE</emphasis> do not assume that the experiments
     will run for more than the short time selected in the sample runscripts.
   </warning>
   <para>
     <filename>mom4_test1</filename>: This experiment consists of a
     flat bottom sector domain and uses very simple physics. This
     experiment is very small and can be easily run on a single
     workstation. It should provide the user with a basic experience
     of running mom4.
   </para>
   <para>
     <filename>mom4_test2</filename>: This experiment consists of a
     flat bottom sector domain and it uses more realistic physics
     options. This experiment has the same grid as
     <filename>test1</filename>, but it more thoroughly exercises the
     model's various physics packages.  Since the domain is small, it
     should be accessible to those with single workstations, though it
     will be slower than mom4_test1 due to the use of more realistic
     physical parameterizations.
   </para>
   <para>
     <filename>mom4_test3A</filename>: This experiment consists of an
     east-west channel using open boundary conditions at the western
     end of the channel. This experiment provides an illustration of
     the open boundary condition capability of MOM4. Tracers include
     potential temperature and salinity.
   </para>
   <para>
     <filename>mom4_test3B</filename>: This experiment consists of an
     solid wall on all four sides and with a domain twice as long as
     the open boundary condition
     <filename>test3A</filename>. This experiment is used to verify
     the relevance of the open boundary solution from
     <filename>test3A</filename> solution at early times. That is, for
     early times, the solution from
     <filename>test3A</filename> should closely (though not bitwise)
     agree with that from
     <filename>test3B</filename>. Tracers include potential
     temperature and salinity.
   </para>
   <para>
     <filename>mom4_test4</filename>: This model uses a global
     tripolar grid with roughly "3-degree" resolution and 28 vertical
     levels. The ocean is coupled to the GFDL sea ice model. Tracers
     include temperature and salinity, as well as the age, OCMIP
     biotic, and cfc tracer packages.  This model is aimed to test the
     capabilities of the multipe tracers available with mom4.  Note
     that the Sweby advection scheme is used here for all tracers, as
     is recommended by GFDL researchers.
   </para>
   <para>
     <filename>mom4_test5</filename>: This model uses a global
     tripolar grid with roughly "1-degree" resolution and 50 vertical
     levels. The ocean is coupled to the GFDL sea ice model.  The
     configuration is forced with the German OMIP dataset. Ocean
     tracers include potential temperature and salinity as well as the
     age tracer package.  This is a large model, and it is similar
     (though not the same) to the ocean and ice configuration used for
     the GFDL IPCC simulations.
   </para>
  <para>
  <filename>mom4_iom</filename>: This is Indian Ocean Community Model
   version 1.0 developed for Intensive Course on Ocean Modeling held
   at CMMACS, India, October 4-14, 2004.
  </para>
</section>

</section>

<section id="mom4 modules">
   <title>Contributing MOM4-modules</title>
   <para>
     As with previous MOMs, the GFDL-MOM4 developers aim to provide
     the international climate research community with a repository
     for robust and well documented methods to simulate the ocean
     climate system.  Consequently, we encourage researchers to
     support various modules that are presently absent from MOM4, yet
     may arguably enhance the simulation integrity (e.g., a new
     physical parameterization or new advection scheme) or increase
     the model's functionality.
   </para>
   <para>
     Depending on the level of code contributions, we envision a directory
     where "contributed MOM4 code" will reside. Maintenance and ownership of
     this code will remain with the contributor. As a practical matter, prior
     to spending time developing a new module, it is recommended that the
     developer query the <ulink url="mailto:oar.gfdl.mom4p0@noaa.gov">MOM4
     mailing list</ulink> to see what efforts in the community may have already
     been availed.
   </para>
   <para>
     Requirements that contributed code must meet include the following:
     <orderedlist>
     <listitem> 
       Clean modular Fortran 90 code that minimally touches other parts of the
       model
     </listitem>
     <listitem>
       Satisfaction of the
       <ulink url="http://www.gfdl.noaa.gov/~fms">FMS</ulink> code
       specifications outlined in the
       <ulink
       url="http://www.gfdl.noaa.gov/~vb/FMSManual/FMSManual.html">FMS
       Developers' Manual</ulink>
     </listitem>
     <listitem>
       Compatibility with the MOM4 <ulink url="#mom4 test cases">test
       cases</ulink>        
     </listitem>
     <listitem> Thorough and pedagogical documentation of the module
       for inclusion in
       <ulink
       url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">A
       Technical Guide to MOM4</ulink> (a Latex document)
     </listitem>
     <listitem>
       Comments within the code emulating other parts of the model so that HTML
       documentation files can be generated by our converter
     </listitem>
     </orderedlist>  
   </para>
</section>

<section id="obtaining source code and data sets">
   <title>Source code and data sets</title>
  

<section id="source code and data sets">
   <title>Obtaining source code and data sets</title>
   <para>
     The <ulink url="http://www.gfdl.noaa.gov/~fms">FMS</ulink>
     development team uses a local implementation of <ulink
     url="http://fms.gfdl.noaa.gov">GForge</ulink> to serve FMS
     software, located at <ulink url="http://fms.gfdl.noaa.gov"/>. In
     order to obtain the source code and data sets, you must
     <ulink url="https://fms.gfdl.noaa.gov/account/register.php">register
     </ulink> as an FMS user on our software server. After submitting the
     registration form on the software server, you should receive an
     automatically generated confirmation email within a few minutes. Clicking
     on the link in the email confirms the creation of your account.
   </para>
   <para>
     After your account has been created, you should
     <ulink url="https://fms.gfdl.noaa.gov/account/login.php">log
     in</ulink> and request access to the <ulink
     url="http://www.gfdl.noaa.gov">Flexible Modeling System</ulink>
     project. Once the FMS project administrator grants you access,
     you will receive a second email notification. This email requires
     action on the part of the project administrator and thus may take
     longer to arrive. The email will contain a software access
     password along with instructions for obtaining the release
     package, which are described below.
   </para>
   <para>
     To check out the release package containing source code, scripts, and
     documentation via CVS, type the following commands into a shell window.
     You might wish to first create a directory called <filename>fms</filename>
     in which to run these commands. You should enter the software access
     password when prompted by the <command>cvs login</command> command. At cvs
     login, the file <filename>~/.cvspass</filename> is read. If this file does
     not already exist, an error message may display and the cvs login may
     fail. In this event, you should first create this file via
     <command>touch ~/.cvspass</command>.
     <programlisting>
      cvs -z3 -d:pserver:cvs@fms.gfdl.noaa.gov:/cvsroot/mom4 login
         (Enter the password you receive in the welcome email here)
      cvs -z3 -d:pserver:cvs@fms.gfdl.noaa.gov:/cvsroot/mom4 co -r mom4p0d mom4
     </programlisting>
     This will create a directory called <filename>mom4</filename> in your
     current working directory containing the release package.
   </para>
   <para>
    If you have already checked out this CVS tag previously and some files
    have been modified since your last checkout you may wish to update your
    code as follows:
    <programlisting>
      cvs -z3 -d:pserver:cvs@fms.gfdl.noaa.gov:/cvsroot/mom4 login
         (Enter the password you receive in the welcome email here)
      cvs -z3 -d:pserver:cvs@fms.gfdl.noaa.gov:/cvsroot/mom4 update -r mom4p0d mom4
    </programlisting>    
   </para>
      
   <para>
     If you prefer not to use CVS, you may download the tar file from
     <ulink url="https://fms.gfdl.noaa.gov/projects/mom4/"/>. Sample output is
     also available there for download. See
     <xref linkend="sample model output">section 7.1</xref> for more
     information on the sample output.
   </para>
   <para>
     All data sets that are needed to run <ulink url="#mom4 test
     cases">MOM4 test cases</ulink> are available for download from
     the same place in GForge where users get the source
     code. Therefore, users need to register only once to get both the
     source code and data sets of MOM4. More details can be found in
     the
     <ulink url="quickstart_guide.html">quickstart_guide.html</ulink>.
   </para>
</section>

<section id="data sets">
   <title>Description of the data sets</title>
   <para>
     The topography data set for <filename>test4</filename>, and 
     <filename>test5</filename> is a
     coarsened version of that kindly provided by Andrew Coward and
     David Webb at the
     <ulink
     url="http://www.soc.soton.ac.uk/JRD/OCCAM/welcome.html">Southampton
     Oceanography Centre</ulink>. Their topography is a montage of
     that developed by <ulink
     url="http://topex.ucsd.edu/marine_topo/mar_topo.html">Smith and
     Sandwell</ulink> (1997) by satellite data in the region of
     72&#176;S to 72&#176;N, the NOAA (1988) 5-minute global
     topography
     <ulink
     url="http://www.ngdc.noaa.gov/mgg/global/etopo5.HTML">ETOPO5</ulink>,
     and the International Bathymetric Chart of the Arctic Ocean
     (<ulink
     url="http://www.ngdc.noaa.gov/mgg/bathymetry/arctic/arctic.html">IBCAO</ulink>). The
     chlorophyll-a density data set was compiled by
     <ulink url="mailto:Colm.Sweeney@noaa.gov">Colm Sweeney</ulink>,
     using data from <ulink
     url="http://www.gso.uri.edu/faculty/yoder.html">James
     A. Yoder</ulink> and Maureen A. Kennelly at the
     <ulink url="http://www.gso.uri.edu/">Graduate School of
     Oceanography</ulink>, <ulink url="http://www.uri.edu/">University
     of Rhode Island</ulink>. This data set contains monthly
     chlorophyll concentrations from the <ulink
     url="http://seawifs.gsfc.nasa.gov/SEAWIFS.html">SeaWiFS</ulink>
     satellite for the period 1999-2001. Monthly wind stress is based
     on Hellerman and Rosenstein (1983). Temperature and salinity
     initial and boundary conditions are provided by the
     <ulink url="http://www.noaa.gov">NOAA</ulink> National
     Oceanographic Data Center (<ulink
     url="http://www.nodc.noaa.gov/">NODC</ulink>) World Ocean Atlas
     (<ulink
     url="http://www.nodc.noaa.gov/OC5/indprod.html">WOA</ulink>).
   </para>
     <para>
     All datasets of MOM4 are in <ulink	url="http://www.unidata.ucar.edu/packages/netcdf/">
     NetCDF</ulink> format since this format is
     widely used in the community. A number of useful tools are
     available <ulink url="http://nco.sourceforge.net/"> here </ulink> 
     that allow the user to perform some necessary operations (editting attributes,
     merging, etc.) on a NetCDF file.

     </para>
</section>

</section>

<section id="Setting up an experiment with mom4">
   <title>Setting up an experiment with mom4</title>
     <para>
MOM4 is distributed with code used to generate model grids, initial
conditions, and boundary conditions.  Each step must be performed
prior to running the ocean model.  The steps used during this
experimental setup stage are generally termed "preprocessing", and the
code used for these purposes is under the /preprocessing directory in
the mom4 distribution.  The purpose of this section of the User Guide
is to outline this code and its usage.  Further details of usage and
algorithms can be found in the internal documentation within the
various preprocessing code modules.
 </para>
 <section id="General comments">
   <title>General comments</title>
   <para>
We start this section with some general comments regarding the setup
of a model experiment.
 </para><para>
--Setting up an experiment is critical part to the success of a
research or development project with mom4.  It is important that the
user take some time to understand each of the many steps, and
scrutinize the output from this code.
 </para><para>
We have endeavoured over the years to provide tools facilitating the
ready setup of a new experiment.  However, we remain unable to provide
code that does everything possible under the sun.  Additionally, all
features that are provided here may not be fully tested.
For these reasons, the preprocessing code continues to evolve as use
and functionality evolve.  We sincerely appreciate ALL comments about
code and documentation, especially comments regarding clarity,
completeness, and correctness.  Your input is essential for the
improvement of the code and documentation.
 </para><para>
--Many steps in idealized experiments that were formerly performed
while running earlier MOM versions have been extracted from mom4 and
placed into preprocessing.  Hence, even if you are running an
idealized experiment, it is likely that you will need to perform some
if not all of the preprocessing steps discussed here.
 </para><para>
--In addition to this section discussing how to set up an experiment,
the online USER GUIDE has a <ulink url="http://www.gfdl.noaa.gov/~gtn/mom4_faq.html">
Frequently Asked Questions (FAQ)</ulink> section
devoted to these issues.  If you have a problem that is not addressed
either here or the FAQ, then please feel free to query the mom4 email
list.  No question is too silly, so please ask!
 </para><para>
--All code used to setup an experiment with mom4 is written in Fortran
90/95 except make_xgrids, which is written in C.  Most code is
dependent on FMS shared code for the purpose of parallization and
interpolation.  In addition to the documentation provided here and
<ulink url="http://www.gfdl.noaa.gov/~gtn/mom4_faq.html"> FAQs</ulink>,
there are comments within the code to help users debug and to
make modifications to suit their purpose.
 </para><para>
--Some users make nontrivial changes of general use.  With your
support, assistance, and maintenance, we will endeavour to include
your changes in future releases.
  </para>
 </section>
    
 <section id="Generation of the Model Grid">
   <title>Generation of the Model Grid</title>
   <para>
     The grid_spec.nc file is generated by executing the
     <command>make_xgrids</command> utility. <command>make_xgrids</command>
     generates the two exchange grids used by the FMS
     coupler, one for surface fluxes and the other for runoff, when the
     simulation requires an atmospheric grid different from the sample
     exchange grids provided by
     <ulink url="http://www.noaa.gov/~fms">FMS</ulink>.
     <command>make_xgrids</command> is created by compiling its C source, for
     example:
     <programlisting>
        cc -O -o make_xgrids make_xgrids.c -L/usr/local/lib -lnetcdf -lm
     </programlisting>
     creates the <command>make_xgrids</command> executable from C-source and
     the netCDF and standard math libraries and is executed with the command:
     <programlisting>
       make_xgrids -o LON2.5LAT2LONLAT.nc -a N45.nc -l N45.nc
     </programlisting>
     which makes a grid_spec.nc file (input files containing grid
     information for the ocean/sea-ice, atmosphere and land component
     models are indicated by the <option>-o</option>,
     <option>-a</option> and <option>-l</option> flags, respectively).
     <command>make_xgrids</command> expect a netCDF format input specification
     for the ice/ocean grid ( LON2.5LAT2LONLAT.nc in the above example). Three
     fields are required to be in this file:
     <orderedlist>
       <listitem><command>wet</command> - a 2D array of double precision
       numbers set to 1.0 where the ice and ocean models are active and 0.0
       elsewhere. <command>wet</command> has <command>im</command> indices in
       the <command>i</command> (pseudo east-west) direction and
       <command>jm</command> indices in the <command>j</command>
       (pseudo north-south) direction. These correspond to the global arrays of
       temperature, salinity and ice thickness in the coupled climate model.
       </listitem>
       <listitem><command>x_vert_T</command> and <command>y_vert_T</command> -
        2D double precision arrays (dimensioned <command>im+1</command> by
        <command>jm+1</command>) that contain the longitudes and latitudes
        (respectively) of the four corners of T- cells in degrees.
       </listitem>
     </orderedlist>
   </para>
   <para>
     <command>make_xgrids</command> also expects a netCDF format input
     specification for the atmosphere and land grid (N45.nc in the above
     example). <command>x_vert_T</command> and <command>y_vert_t</command> are
     required in the atmosphere/land grid file (<filename>N45.nc</filename>).
     <command>make_xgrids</command> copies all fields of the ice/ocean grid
     specification file to its output file, <filename>grid_spec.nc</filename>,
     and then appends fields that specify the atmosphere and land model grids
     and the surface and runoff exchange grids.
   </para>
   <para>
    <inlinemediaobject>
     <imageobject>
       <imagedata
       fileref="http://www.gfdl.noaa.gov/~lat/webpages/images/land_surgery.gif"
       align="right" height="300" width="140"/>
     </imageobject>
     <textobject>
       <phrase>The Sutherland-Hodgeman polygon clipping algorithm for model
               cell interaction calculation</phrase>
     </textobject>
   </inlinemediaobject>
     <command>make_xgrids</command> takes care that the land and ocean grids 
     perfectly tile the sphere. The land model's domain is defined as the
     part of the sphere not covered by ocean (where wet = 0 on the ocean 
     grid). To accomplish this, the land cells must be modified to remove
     the ocean parts. This is done in <command>make_xgrids</command> by first
     taking the intersections of atmosphere and land cells. The overlap area
     between these cells and active ocean cells are then subtracted. Finally,
     the modified atmosphere/land intersections are aggregated into land cell
     areas and atmosphere/land exchange cell areas.
   </para>
   <para>
     Model cell intersections are calculated using the
     Sutherland-Hodgeman polygon clipping algorithm (Sutherland,
     I. E. and G. W. Hodgeman, 1974: Reentrant polygon clipping, CACM,
     17(1), 32-42.). This algorithm finds the intersection of a convex
     and arbitrary polygon by successively removing the portion of the
     latter that is "outside" each boundary of the former. It can be
     found in many computer graphics text books (e.g., Foley, J. D.,
     A. van Dam, S. K. Feiner, and J. F. Hughes, 1990: Computer
     graphics: principles and practice, second edition. Addison
     Wesley, 1174 pp.). The implementation in
     <command>make_xgrids</command> is particularly simple because the clipping
     polygon is always a rectangle in longitude/latitude space. For the purpose
     of finding the line intersections in the clipping operations, the cell
     boundaries are assumed to be straight lines in longitude/latitude space.
     This treatment is only perfectly accurate for cells bounded by lines of
     longitude and latitude.
   </para>
   <para>
     Spherical areas are calculated by taking the integral of the negative
     sine of latitude around the boundary of a polygon (Jones, P. W., 1999:
     First- and second-order conservative remapping schemes for grids in
     spherical coordinates. Monthly Weather Review, 127, 2204-2210.). The
     integration pathways are again straight lines in longitude/latitude
     space. <command>make_xgrids</command> checks that the sphere and the
     individual cells of the atmosphere and ocean grids are tiled by the
     surface exchange cells. The fractional tiling errors are reported.
   </para>
</section>
<section id="Initial and Boundary Conditions">
   <title>Initial and Boundary Conditions</title>
     <para>
After generating the model grid, it is time to generate the initial
and boundary conditions (ICs and BCs).  These conditions are specific
to the details of the model grid, so it is necessary to have the grid
specificiation file in hand before moving to the IC and BC generation.
</para><para>
There are two options for ICs and BCs.
</para><para>
--Idealized Conditions.  These conditions are based on subroutines
that design idealized setups for either initial conditions (e.g.,
exponential temperature profile) or boundary conditions (e.g., cosine
zonal wind stress).  Code for these purposes is found in the
idealized_ic and idealized_bc directories in the mom4 distribution.
Details of available namelist choices are in the documentation file
idealized_ic.html as well as the comments within the source code
itself.  Users can readily incorporate their favorite idealized IC or
BC into the mom4 idealized preprocessing step by emulating the code
provided.
</para><para>
--Realistic Conditions.  These ICs and BCs generally result from a
regridding routine to bring, say, the Levitus analysis onto the model
grid for initializing a model, or for mapping surface fluxes onto the
grid for boundary conditions.  Code enabling the regridding functions
is found in the preprocessing/regrid_2d, preprocessing/regrid_3d and
preprocessing/regrid directories in the mom4 distribution.
</para><para>
In the remainder of this section, we detail code to generate the ICs
and BCs of use for mom4.
    </para>


<section id="2d Regridding: the common approach">
   <title>2d Regridding: the common approach</title>
      <para>
It is typical for air-sea fluxes of momentum, heat, and mosture to
live on a grid distinct from the ocean model grid.  In particular,
most analyses are placed on a spherical latitude-longitude grid,
whereas most global ocean models configured from mom4 are run with
tripolar grids.
</para><para>
When running an ocean or ocean-ice model, it is useful to map the
boundary fluxes onto the ocean model grid prior to the experiment.
This preprocessing step saves computational time that would otherwise
be needed if the fluxes were mapped each time step of a running
experiment.  To enable this regridding, one should access code in the
preprocessing/regrid_2d directory.  The original data must be on a
latitude-longitude grid to use regrid_2d.  The target/destination grid
can be either latitude-longitude with arbitrary resolution, or
tripolar with arbitrary resolution.
</para>      
</section>      

<section id="2d Regridding: the less common approach">
   <title>2d Regridding: the less common approach</title>
<para>
In some cases, one may wish to take a set of forcing fields from one
tripolar mom4 experiment and regrid them onto another tripolar mom4
experiment with different grid resolution.  In this case, it is
necessary to regrid before running the experiment.
</para><para>
As of the mom4p0d distribution, there is a regridding tool within the
preprocessing/regrid directory that enables one to regrid fields on
one tripolar grid to another tripolar grid. Indeed, one can regrid
source data from any logically rectangular grid (e.g.,
latitude-longitude grid or tripolar grid) to a target/destination grid
that is any logically rectangular grid.
</para><para>
Note that this is new code, and so has been tested only for particular
cases.  So the user should be extra careful to scrutinize the results.
</para>
</section>
<section id="Setting the on_grid logical in the data_table">
   <title>Setting the on_grid logical in the data_table</title>
<para>
The "on_grid" logical in the data_table indicates whether an input
file is on the grid of the model or not.
</para><para>
on_grid=.true. means that the input file is on the same grid as the
ocean model.  This is the recommended setting for models running with
specified atmospheric forcing from data or an analysis product.
</para><para>
on_grid=.false. means the input file has data on a grid differing from
the ocean model.  This feature is allowed ONLY if the input data lives
on a spherical grid.  This is a relevant setting if one wishes to keep
the input data on their native spherical grid. If the input data is
non-spherical, then on_grid=.false. is NOT supported.  Instead, it is
necessary to preprocess the data onto the ocean model grid.
</para>
</section> 
<section id="Regridding river runoff data">
   <title>Regridding river runoff data</title>
<para>
The tool preprocessing/runoff_regrid is of use to grid river runoff
data onto the ocean model grid.  In this case, runoff is moved to a
nearest ocean/land boundary point on the new grid.  Note that the
source runoff dataset must be on a spherical latitude-longitude grid,
whereas the target/destination grid can be spherical or tripolar.  The
regridding algorithm is conservative.
</para><para>
The conservative regridding scheme used in runoff_regrid is an area
average scheme, which is similiar to the algorithm used in coupler
flux exchange.  If any land point has runoff data, after remapping
runoff data onto destination grid, the runoff value of that land point
will be moved to the nearest ocean point. Before using this tool, you
must use make_xgrids to generate exchange grid information between the
source grid and destination grid. The complete descritpion can be
found in runoff_regrid.html.
</para>
</section> 

<section id="Two ways to specify surface boundary fluxes">
   <title>Two ways to specify surface boundary fluxes</title>
<para>


There are two ways to specify surface boundary fluxes when using the
coupler feature of FMS. One is through flux exchange, and this employs
a conservative algorithm as appropriate for running a coupled
ocean-atmosphere model.  It is assumed that the atmospheric model grid
is spherical with arbitrary resolution.  The other method is through
data override, and this uses a non-conservative scheme.  Data override
is of use to selectively remove, say, one of the fluxes coming from an
atmospheric model and replace this flux with that from data.  GFDL
modelers have found this feature to be very useful in diagnosing
problems with a coupled model.
</para>
</section>
<section id="3d Regridding for ICs or Sponges">
   <title>3d Regridding for ICs or Sponges</title>
<para>


When generating realistic initial conditions for an ocean experiment,
one generally requires the gridding of temperature and salinity, such
as from the Levitus analysis product, onto the model's grid.  For this
purpose, we are in need of vertical grid information in addition to
horizontal 2d information required for the surface boundary
conditions.  Hence, we use the preprocessing/regrid_3d. A similar
procedure is required to develop sponge data.
</para><para>
The original data must be on a spherical grid in order to use
regrid_3d.  If the original data is on a tripolar grid, we should use
preprocessing/regrid, which can map data from any logical rectangular
grid onto any logical rectangular grid.
</para>
</section>
    
<section id="Comments on the regridding algorithms">
   <title>Comments on the regridding algorithms</title>
<para>


For preprocessing/regrid_3d, preprocessing/regrid_2d and
preprocessing/regrid, regridding is accomplished non-conservatively
using a nearest neighbor distance weighting algorithm, or bilinear
interpolation.  The interpolation algorithm is controlled through the
namelist option "interp_method".
</para><para>
Bilinear interpolation is recommanded for most cases since it provides
a smooth interpolation when regridding from coarse grid to fine grid
(the usual situation with model destination grids typically having
resolution more refined than source data products), and it is more
efficient.  Efficiency can become a particularly important issue when
developing initial and boundary conditions for a refined resolution
model.
</para><para>
If the original data is on a tripolar grid, nearest neighbor distance
weighting interpolation found in preprocessing/regrid must be used,
since bilinear interpolation assumes the original data is on a
latitude-longitude grid.  For preprocessing/regrid_2d,
preprocessing/regrid_3d and preprocessing/regrid using the nearest
neighbor distance weighting algorithm, a maximum distance (in radians)
can be selected using the namelist value max_dist. Namelist option
"num_nbrs" can be adjusted for speed, although for most applications
this refinement is not necessary.
</para><para>
The complete namelist description for these algorithms can be found in
regrid_2d.html, regrid_3d.html and regrid.html.
</para>
</section>
<section id="Acceptable data formats">
   <title>Acceptable data formats</title>
<para>
When the input data is on a latitude-longitude grid,
preprocessing/regrid_2d and preprocessing/regrid_3d can be used.
</para><para>
When the input data is on a tripolar grid or a latitude-longitude
grid, postprocessing/regrid can be used.
</para><para>
For sponge generation, acceptable input data sets must have NetCDF
format with COARDS-compliance.
</para>
</section>
<section id="Calendar types in the forcing field data sets">
   <title>Calendar types in the forcing field data sets</title>

MOM4 requires its forcing data to have an explicit specification of a 
calendar type.  If the calendar type is absent, the model is brought 
down.  This method is considered a safe way to enforce some knowledge of 
the calender used when running a model, rather than to let the user 
assume one calendar when the data is actually another.  Serious problems 
have been encountered with use of the wrong calendar type, and we 
encourage modelers to pay attention to this detail when running 
realistic simulations.
<para>
For technical reasons, the code used to create idealized boundary 
conditions in the preprocessing directory does not specify a calendar 
attribute.  It is therefore up to the user to do so via a netcdf utility 
applied to the resulting netcdf file.  For example, when creating 
idealized cosine wind stress, one needs to specify a calendar, such as a 
365 day (noleap) year, using the following command</para>
<command>
ncatted -h -a calendar_type,TIME,c,c,'NOLEAP' tau.nc </command>
<para>
In future versions of the preprocessing code, we will provide namelist 
options for adding the calendar. For now, the user must provide this 
information using the above method with netcdf commands.</para>	
</section>	
</section>
</section>

<section id="Postprocessing regrid tool">
   <title>Postprocessing regrid tool</title>
<section id="Introduction ">
     <title>Introduction </title> 
<para>
For many analysis applications, it is sufficient, and often
preferable, to have output on the model's native grid (i.e., the grid
used to run the simulation).  Accurate computation of budgets, for
example, must be done on the model's native grid, preferably online
during integration. MOM4 provides numerous online diagnostics for this
purpose. </para><para>
Many applications, such as model comparison projects, require results
on a common latitude-longitude spherical grid.  Such facilitates the
development of difference maps.  For this purpose, we have developed a
tool to regrid scalar and vector fields from a tripolar grid to a
spherical grid.  In principle, this tool can be used to regrid any
logically rectangular gridded field onto a spherical grid.  However,
applications at GFDL have been limited to the tripolar to spherical
regrid case. </para><para>
In general, regridding is a difficult task to perform accurately and
without producing noise or spurious results.  The user should
carefully examine regridding results for their physical
integrity. Problems occur, in particular, with fields near mom4's
partial bottom step topography in the presence of realistic topography
and land/sea geometry.  Indeed, we were unable to find a simple
algorithm to handle regridding in the vertical that did not produce
egregious levels of noise. Hence, the regridding tool provided with
mom4 only handles horizontal regridding. The regridded data will thus
be on the source vertical grid. </para><para>
Model comparisons should ideally be performed only after regridding
output using the same regridding algorithm.  Unfortunately, such is
not generally the case since there is no standard regridding algorithm
used in the modeling community. </para><para>
Please note that the regridding code is relatively new at GFDL. We
greatly appreciate user's feedback.      </para>
</section>
<section id="How to use the regridding tool">
      <title>How to use the regridding tool </title>
 <para>      
The regridding algorithm provided with the mom4 distribution is
located in the directory <command>postprocessing/regrid</command>
 </para><para>
The algorithm accepts data from any logically rectangular grid (e.g.,
tripolar or latitude-longitude) and regrids to a spherical
latitude-longitude grid. When the data is on the tracer cell (T-cell),
the regridding interpolation is conservative. Thus, total heat, salt,
and passive tracer remain the same on the two grids.  However, when
data is located at another position:  </para>
 <itemizedlist>
 <listitem>
corner or C-cell as for a B-grid horizontal velocity component
	</listitem>
 <listitem>
east or E-cell as for an eastward tracer flux
	</listitem>
 <listitem>
north or N-cell as for a northward tracer flux
	</listitem>	
 </itemizedlist>
<para>
then regridding is accomplished non-conservatively using a nearest
neighbor distance weighting algorithm.  It is for this reason that
compuationally accurate results are only available when working on the
model's native grids.  </para><para>
The regridding tool reads grids information from a netcdf file, specified
by the namelist "grid_spec_file". "grid_spec_file" contains source grid,
destination grid and exchange grid information.</para>
 <itemizedlist>
 <listitem>
  source grid: src_grid.nc.  This is the model's native grid.  It
  results from running preprocessing grid generation code.
</listitem>
 <listitem>
  destination grid: dst_grid.nc. This is the spherical
  latitude-lontitude grid.  This grid can also be obtained from running
  preprocessing grid generation code.  Be sure that the tripolar option
  is set to false to ensure that dst_grid.nc is spherical.
</listitem>
 <listitem>
  exchange grid: grid_spec.nc.  This is the union of the source grid
  and destination grid.  The exchange grid is needed for conservative
  regridding.  The same conservative regridding algorithm is used for
  coupled models with FMS.  The tool to construct the exchange grid is
  know as "make_xgrids". It is located in the preprocessing directory.
  After grid_spec.nc is generated, it should be passed to the regrid tool
  through namelist "grid_spec_file"(No need to pass src_grid.nc and 
  dst_grid.nc to the regrid tool).
</listitem>
</itemizedlist>
<para>
      To create the exchange grid, execute the command </para><para>
<command>make_xgrids -o src_grid.nc -a dst_grid.nc</command>
 </para><para>
 The exchange grid creates a file grid_spec.nc.  It has new fields
with names: </para><para>
 AREA_ATMxOCN, DI_ATMxOCN, DJ_ATMxOCN, I_ATM_ATMxOCN, J_ATM_ATMxOCN,
I_OCN_ATMxOCN, J_OCN_ATMxOCN, AREA_ATMxLND, DI_ATMxLND, DJ_ATMxLND,
I_ATM_ATMxLND, J_ATM_ATMxLND, I_LND_ATMxLND, J_LND_ATMxLND,
AREA_LNDxOCN, DI_LNDxOCN, DJ_LNDxOCN, I_LND_LNDxOCN, J_LND_LNDxOCN,
I_OCN_LNDxOCN, J_OCN_LNDxOCN, xba, yba, xta, yta, AREA_ATM, xbl, ybl,
xtl, ytl, AREA_LND, AREA_LND_CELL, xto, yto, AREA_OCN  </para><para>

It is critical that src_grid.nc DO NOT already have any of the above
new exchange grid fields.  If they do, then these fields should be
removed using netcdf <ulink url="http://nco.sourceforge.net/">
 tools </ulink> such as ncks. </para><para>
After the grid_spec.nc file is generated, it is passed into the regrid
program through the nml option "grid_spec_file".
 </para><para>
The regrid program reads model data from a netcdf file, which is
specfied by the namelist variable "src_data". Again, src_data fields
are gridded according to src_grid.nc.  The number of fields to be
regridded is specified by num_flds. The name of the fields (e.g.,
temp, salt) to be regridded is specified by the namelist variable
"fld_name".  Each field can be a scalar or vector.  If a vector, then
specify by vector_fld. Vector fields should always be paired together
(e.g., u,v components to the horizontal current).  The output file is
a netcdf file specified by the namelist variable "dst_data".
 </para><para>
The complete namelist option description is available in regrid.html
or the code itself. </para>
</section>
</section> 
  
<section id="preparing the runscript">
   <title>Preparing the runscript</title>

<section id="runscript">
   <title>The runscript</title>
   <para>
     A runscript is provided in each <ulink url="#mom4 test cases">test case
     </ulink> directory (<filename>mom4/exp/<emphasis>$test_case</emphasis>
     </filename>) for each <ulink url="#mom4 test cases">test case</ulink>.
     Details can be found in
     <ulink url="quickstart_guide.html">quickstart_guide.html</ulink>.
   </para> 
   <para>
     Incorporated in the FMS infrastructure is
     <ulink url="../src/shared/mpp/mpp.html"><filename>MPP</filename></ulink>
     (Massively Parallel Processing), which provides a uniform message-passing
     API interface to the different message-passing libraries. If MPICH is 
     installed, the user can compile the MOM4 source code with MPI. If the user
     does not have MPICH or the communications library, the MOM4 source code
     can be compiled without MPI by omitting the <option>CPPFLAGS</option>
     value <option>-Duse_libMPI</option> in the example runscript.
   </para>
</section>

<section id="the diagnostics table">
   <title>The diagnostics table</title>
   <para>
     The diagnostics table allows users to specify the sampling rates and
     choose the output fields prior to executing the MOM4 source code. It is
     included in the <filename>input</filename> directory for each
     <ulink url="#mom4 test cases">test case</ulink>
     (<filename>mom4/exp/<emphasis>$test_case</emphasis>/input</filename>). A
     portion of a sample MOM4 diagnostic table is displayed below. Reference
     <ulink url="../src/shared/diag_manager/diag_manager.html">
     diag_manager.html</ulink> for detailed information on the use of diag_manager.
   </para>
   <programlisting>
    "Diagnostics for MOM4 test case"
    1980 1 1 0 0 0
    #output files
    "ocean_month",1,"months",1,"hours","Time"
    "ocean_snap",1,"days",1,"hours","Time"
    #####diagnostic field entries####
    #===============================================================
    # ocean model grid quantities (static fields and so not time averaged))
    "ocean_model","geolon_t","geolon_t","ocean_month" "all",.false.,"none",2
    "ocean_model","geolat_t","geolat_t","ocean_month","all",.false.,"none",2
    #================================================================
    # prognostic fields 
    "ocean_model","temp","temp","ocean_month","all", "max", "none",2
    "ocean_model","age_global","age_global","ocean_month","all","min","none",2
    #================================================================
    # diagnosing tracer transport 
    "ocean_model","temp_xflux_sigma","temp_xflux_sigma","ocean_month","all",.true.,"none",2
    "ocean_model","temp_yflux_sigma","temp_yflux_sigma","ocean_month","all",.true.,"none",2
    #================================================================ 
    # surface forcing
    "ocean_model","sfc_hflux","sfc_hflux","ocean_month","all",.true.,"none",2
    "ocean_model","sfc_hflux_adj","sfc_hflux_adj","ocean_month","all",.true.,"none",2
    #================================================================
    # ice model fields 
    "ice_model", "FRAZIL",   "FRAZIL",     "ice_month", "all", .true., "none", 2,
    "ice_model", "HI",    "HI",   "ice_month", "all", .true., "none", 2
    #-----------------------------------------------------------------
   </programlisting>
   <para>
     The diagnostics manager module,
     <ulink
     url="../src/shared/diag_manager/diag_manager.html"><filename>diag_manager_mod</filename></ulink>,
     is a set of simple calls for parallel diagnostics on distributed
     systems. It provides a convenient set of interfaces for writing
     data to disk in
     <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>
     format. The diagnostics manager is packaged with the MOM4 source code. The
     FMS diagnostic manager can handle scalar fields as well as arrays.
     For more information on the diagnostics manager,
     reference <ulink url="../src/shared/diag_manager/diag_manager.html">
     diag_manager.html</ulink>.
   </para>
</section>

<section id="the field table">
   <title>The field table</title>
   <para>
     The MOM4 field table is used to specify tracers and their advection
     schemes, cross-land tracer mixing, cross-land insertion, and
     other options.  The field
     table is included in the runscript as a namelist and is written to an
     output file upon execution of the runscript. 
   </para>
   <programlisting>

    <para>
"diag_tracers","ocean_mod","frazil"

file_in  = INPUT/ocean_frazil.res.nc
file_out = RESTART/ocean_frazil.res.nc
/
   </para>
    <para>
"prog_tracers","ocean_mod","temp"

horizontal-advection-scheme = quicker
vertical-advection-scheme = quicker
file_in  = INPUT/ocean_temp_salt.res.nc
file_out = RESTART/ocean_temp_salt.res.nc
/</para>
    <para> 
"prog_tracers","ocean_mod","salt"

horizontal-advection-scheme = mdfl_sweby
vertical-advection-scheme = mdfl_sweby
file_in  = INPUT/ocean_temp_salt.res.nc
file_out = RESTART/ocean_temp_salt.res.nc
/ </para>
    <para>
"tracer_packages","ocean_mod","ocean_age_tracer"

names = global
horizontal-advection-scheme = mdfl_sweby
vertical-advection-scheme = mdfl_sweby
file_in  = INPUT/ocean_age.res.nc
file_out = RESTART/ocean_age.res.nc
min_tracer_limit=0.0
/
</para>
    <para>
"namelists","ocean_mod","ocean_age_tracer/global"

slat = -90.0
nlat =  90.0
wlon =   0.0
elon = 360.0
/
</para>

<para>
"xland_mix","ocean_mod","xland_mix"
"xland","Gibraltar","ixland_1=274,ixland_2=276,jxland_1=146,jxland_2=146,kxland_1=1,kxland_2=28,vxland=0.55e6"
"xland","Gibraltar","ixland_1=274,ixland_2=276,jxland_1=147,jxland_2=147,kxland_1=1,kxland_2=28,vxland=0.55e6"
"xland","Black-Med","ixland_1=305,ixland_2=309,jxland_1=151,jxland_2=152,kxland_1=1,kxland_2=6,vxland=0.01e6"
"xland","Black-Med","ixland_1=306,ixland_2=309,jxland_1=151,jxland_2=153,kxland_1=1,kxland_2=6,vxland=0.01e6"/

"xland_insert","ocean_mod","xland_insert"
"xland","Gibraltar","ixland_1=274,ixland_2=276,jxland_1=146,jxland_2=146,kxland_1=1,kxland_2=18,tauxland=86400.0"
"xland","Gibraltar","ixland_1=274,ixland_2=276,jxland_1=147,jxland_2=147,kxland_1=1,kxland_2=18,tauxland=86400.0"
"xland","Black-Med","ixland_1=305,ixland_2=309,jxland_1=151,jxland_2=152,kxland_1=1,kxland_2=6,tauxland=86400.0"
"xland","Black-Med","ixland_1=306,ixland_2=309,jxland_1=151,jxland_2=153,kxland_1=1,kxland_2=6,tauxland=86400.0"/

"diff_cbt_enhance","ocean_mod","diff_cbt_enhance"
"diffcbt","Gibraltar","itable=274,jtable=146,ktable_1=1,ktable_2=18,diff_cbt_table=0.01"
"diffcbt","Gibraltar","itable=276,jtable=146,ktable_1=1,ktable_2=18,diff_cbt_table=0.01"
"diffcbt","Gibraltar","itable=274,jtable=147,ktable_1=1,ktable_2=18,diff_cbt_table=0.01"
"diffcbt","Gibraltar","itable=276,jtable=147,ktable_1=1,ktable_2=18,diff_cbt_table=0.01"
"diffcbt","Black-Med","itable=305,jtable=151,ktable_1=1,ktable_2=6,diff_cbt_table=0.01"
"diffcbt","Black-Med","itable=309,jtable=152,ktable_1=1,ktable_2=6,diff_cbt_table=0.01"
"diffcbt","Black-Med","itable=306,jtable=151,ktable_1=1,ktable_2=6,diff_cbt_table=0.01"
"diffcbt","Black-Med","itable=309,jtable=153,ktable_1=1,ktable_2=6,diff_cbt_table=0.01"/

</para>

   </programlisting>
   <para>
     In the first section of the field table, the user can specify tracers to
     be used in the simulation. Although there is no limit to the number of
     tracers specified, temperature (<literal>temp</literal>) and salinity
     (<literal>salt</literal>) must be included. The user may also define the
     horizontal and vertical tracer advection schemes. For more information on the field manager,
     reference <ulink url="../src/shared/field_manager/field_manager.html">
     field_manager.html</ulink>.
   </para>
   <para>
     In climate modeling, it is often necessary to allow water masses that are
     separated by land to exchange tracer and surface height properties. This
     situation arises in models when the grid mesh is too coarse to resolve
     narrow passageways that in reality provide crucial connections between
     water masses. The cross-land mixing and cross-land insertion
     establishes communication between
     bodies of water separated by land. The communication consists of mixing
     tracers and volume between non-adjacent water columns. Momentum is not
     mixed. The scheme conserves total tracer content, total volume, and
     maintains compatibility between the tracer and volume budgets.
     The grid points where this exchange takes place, and the rates of
     the exchange, are specified in the field table. 
   </para>
   <para>
     For some cases, it is necessary to set a large vertical tracer
     diffusivity at a specified point in the model, say next to a
     river mouth to ensure fresh water is mixed vertically.  These
     diffusivities are specified in the field table.  
   </para>
   
   <para>
     For a technical description of cross-land tracer mixing and
     insertion, please reference
     <ulink url="http://www.gfdl.noaa.gov/~smg/pointers/geo_physics_abstracts/guide.pdf">A Technical Guide to MOM4</ulink>.     
   </para>
</section> 

<section id="mppnccombine">
   <title>mppnccombine</title>
   <para>
     Running the MOM4 source code in a parallel processing environment will
     produce one output
     <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>
     diagnostic file per processor.
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> joins together an arbitrary
     number of data files containing chunks of a decomposed domain into a
     unified <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink> file. If the user is running the source code on one processor,
     the domain is not decomposed and there is only one data file.
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> will still copy the full
     contents of the data file, but this is inefficient and
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> should not be used in this case. Executing
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> is automated through the
     <ulink url="#runscript">runscripts</ulink>. The data files are
     <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>
     format for now, but IEEE binary may be supported in the future. 
   </para>
   <para>
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> requires decomposed dimensions in each file to have a
     <literal>domain_decomposition</literal> attribute. This attribute contains
     four integer values: starting value of the entire non-decomposed dimension
     range (usually 1), ending value of the entire non-decomposed dimension
     range, starting value of the current chunk's dimension range and ending
     value of the current chunk's dimension range.
     <filename>mppnccombine</filename> also requires that each file have a
     <literal>NumFilesInSet</literal> global attribute which contains a single
     integer value representing the total number of chunks (i.e., files) to
     combine. 
   </para>
   <para>
     The syntax of
     <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> is:
     <programlisting>
        mppnccombine [-v] [-a] [-r] output.nc [input ...] 
     </programlisting>
     <table frame='none'>
     <title>mppnccombine arguments</title>
     <tgroup cols="2">
     <tbody>
       <row>
         <entry>-v</entry>
         <entry>print some progress information</entry>
       </row>
       <row>
         <entry>-a</entry>
         <entry>append to an existing
                <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">
                NetCDF</ulink> file</entry>
       </row>
       <row>
         <entry>-r</entry>
         <entry>remove the '.####' decomposed files after a successful\
                run</entry>
       </row>
     </tbody>
     </tgroup>
     </table>
   </para>  
   <para>
     An output file must be specified and it is assumed to be the first
     filename argument. If the output file already exists, then it will not be
     modified unless the option is chosen to append to it. If no input files
     are specified, their names will be based on the name of the output file
     plus the extensions '.0000', '.0001', etc. If input files are specified,
     they are assumed to be absolute filenames. A value of 0 is returned if
     execution is completed successfully and a value of 1 indicates otherwise.
   </para>
   <para>
     The source of <ulink url="../postprocessing/mppnccombine.c"><filename>mppnccombine</filename></ulink> is packaged with the MOM4 module in the
     <filename>postprocessing</filename> directory. <filename>mppnccombine.c
     </filename> should be compiled on the platform where the user intends to
     run the FMS MOM4 source code so the
     <ulink url="#runscript">runscript</ulink> can call it. A C compiler and
     <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>
     library are required for compiling
     <filename>mppnccombine.c</filename>:
     <programlisting>
       cc -O -o mppnccombine -I/usr/local/include -L/usr/local/lib mppnccombine.c -lnetcdf
     </programlisting>
   </para>
</section>

</section>

<section id="examining the output">
   <title>Examining the output</title>
     
<section id="sample model output">
   <title>Sample model output</title>
   <para>
     Sample MOM4 model output data files are available to
     <ulink url="#source code and data sets">registered</ulink> MOM4 users on
     GFDL's NOMADS server. The output data are organized into directories that
     bear the same names as the <ulink url="#mom4 test cases">test cases
     </ulink>. For example, output for test case <filename>test5</filename> can
     be found in directory <filename>test5</filename>. Output files are
     classified into three subdirectories:
     <itemizedlist>
      <listitem>
        <filename>ascii</filename>: the description of the setup of the run and
        verbose comments printed out during the run.
      </listitem>
      <listitem>
        <filename>restart</filename>: the model fields necessary to initialize
        future runs of the model.
      </listitem>
      <listitem>
        <filename>history</filename>: output of the model, both averaged over
        specified time intervals and snapshots.
      </listitem>
     </itemizedlist>
     Note that these output files are compressed using <command>tar</command>.
     All <filename>.tar</filename> files should be decompressed for viewing.
     The decompress command is:
     <programlisting>
       tar -xvf filename.tar
     </programlisting>
    </para>
</section>

<section id="analysis tools">
   <title>Analysis tools</title>
   <para>
     There are several graphical packages available to display the model
     output. These packages vary widely depending on factors, such as the
     number of dimensions, the amount and complexity of options available and
     the output data format. The data will first have to be put into a common
     format that all the packages can read. FMS requires the data to be stored
     in
     <ulink url="http://www.unidata.ucar.edu/packages/netcdf/">NetCDF</ulink>
     format since it is so widely supported for scientific visualization. The
     graphical package is also dependent upon the computing environment. For
     ocean modeling,
     <ulink url="http://meteora.ucsd.edu/~pierce/ncview_home_page.html">ncview</ulink>, <ulink url="http://ferret.wrc.noaa.gov/Ferret/">Ferret</ulink>
     and <ulink url="http://grads.iges.org/grads/">GrADS</ulink> are most
     commonly used. 
   </para>
</section>

</section>

<section id="Running mom4 on various computational platforms">
   <title>Running mom4 on various computational platforms</title>
    <para>
An often frustrating aspect of numerical modeling is getting the 
computational environment set up so the model compiles, executes, 
completes, and saves data in a smooth and dependable manner.  There are 
numerous platform configurations, compiler variations, data storage 
capabilities, and experimental designs that make it likely that each 
user will encounter unique issues.
</para><para>
At GFDL, we try to develop code that is portable and readily usable on 
many platforms.  Nonetheless, given the multitude of configurations, we 
cannot anticipate all problems.  So users should expect to spend some 
time setting up the model's computational environment when downloading 
the code for the first time.
</para><para>
We rely on users within the mom4 community to provide feedback regarding 
how they got the model to run on their respective platforms.  We greatly 
appreciate when users send their "progress report" to the mom4 email 
list.  We solicit information on issues that may make future releases 
less problematic.  We also appreciate your detailed documentation that 
may approach "hand holding" to better allow new users to successfully 
run the model.  Indeed, imagine being a fresh graduate student or 
postdoc, only just recently learning Unix and Fortran, aiming to 
download and run mom4 on their PC!  The more experienced users 
share knowledge in a digested and organized manner, the easier it will 
be for others to realize success with the code.
</para><para>
The purpose of this section is to organize some of the many emails that 
have been sent to the mom4 email list that focus on computational 
platform issues.  Given limited resources and limited access to 
platforms outside GFDL, we have not edited these emails. Users who wish 
to update or edit information provided in an earlier email please feel 
free to do so.
</para><para>
<command>NOTE</command>: Some platform related problems may have
already been solved in the latest release. Please check the section
"Code Updates" for release note of each release. </para>
    
<section id="IBM">
   <title>IBM</title>
<programlisting>
Compiler warning in mpp_domains_comm.F90
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00673"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00675"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00676"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00678"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00705"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00706"/>
</programlisting> 
</section>    
<section id="PGI">
      <title>PGI</title>
<programlisting>
Mom4p0c run on PGI5.2-4
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00619"/>
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00633"/>

</programlisting>
</section>    
<section id="SUN">
   <title>SUN</title>
<programlisting>
Running mom4 on a Sun v60x (intel Xeon) cluster
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00604"/>
</programlisting>
</section>    
<section id="NEC">
   <title>NEC</title>
<programlisting>      
MOM4p0 Length of error messages on NEC SX platforms
<ulink url="https://fms.gfdl.noaa.gov/mail/majordomo/archive.php?group_id=5&amp;list_id=7&amp;message_id=00668"/>
</programlisting>
</section>    

    

  </section> 
  
<section id="code updates">
   <title>Code updates</title>
<para>
MOM4 is an evolving code.  As features are added or removed, bugs are
resolved, and documentation clarified, we aim to provide the user
community with access to our latest code used in-house at GFDL.  The
purpose of this section is to summarize the main features of each
model version.
</para><para>
For new users, please download the most recent release.  For those
having used mom4 for sometime, your need to update should be based on
a balance between accessing new features or bug fixes versus the
overhead needed to update your respective model experiments.  It is
recommended that you access new versions of mom4 only after completion
of a particular line of research, rather than updating in the middle.
Notably, we do not ensure that each update is fully backwards
compatible.
</para>
<section id="mom4p0b updates">
   <title>MOM4p0b updates</title>
   <para>
     This is a list of files modified in March/April 2004 for the
     MOM4p0b release of MOM4.
   </para>
   <variablelist>
    <varlistentry>
     <term><ulink url="../src/shared/exchange/xgrid.html"><filename>shared/exchange/xgrid.f90</filename></ulink></term>
     <listitem>Minor edits to make the code compliant with IFC version
     8.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/ice_param/ocean_albedo.html"><filename>ice_param/ocean_albedo.f90</filename></ulink></term>
     <listitem>Minor edits to make the code compliant with IFC version
     8.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/column_diagnostics/column_diagnostics.f90"><filename>shared/column_diagnostics/column_diagnostics.f90</filename></ulink></term>
     <listitem>Minor edits to make the code compliant with IFC version
     8.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/horiz_interp/horiz_interp.html"><filename>shared/horiz_interp/horiz_interp.f90</filename></ulink></term>
     <listitem>Change the step size of radial search from 1 to
     100. This will improve the efficiency and a workaround to fix a
     bug.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/preprocessing/generate_grids/ocean/topog.html"><filename>preprocessing/generate_grids/ocean/topog.f90</filename></ulink></term>
     <listitem>Modify io format to fix one error message.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/preprocessing/generate_grids/ocean/ocean_grid_generator.html"><filename>preprocessing/generate_grids/ocean/ocean_grid_generator.csh</filename></ulink></term>
     <listitem>Minor comments update</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/mpp/mpp_io.html"><filename>shared/mpp/mpp_io.F90</filename></ulink></term>
     <listitem>Added optional argument "time_method" to
     write_meta_field
     subroutine. This is used by diag_manager to document how a
     diagnostic is manipulated along the time axis, e.g. averaging,
     max, min. The metadata used are compliant with CF1.0 metadata
     standard.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/mpp/mpp_read_2Ddecomp.h"><filename>shared/mpp/mpp_read_2Ddecomp.h</filename></ulink></term>
     <listitem>Bug fix for lenx and leny variables</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/diag_manager/diag_manager.html"><filename>shared/diag_manager</filename></ulink></term>
     <listitem>In addition to time average now users can have min, max
     in the same time period.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/coupler/coupler_main.html"><filename>coupler/coupler_main.f90</filename></ulink></term>
     <listitem>Replace constant number 2 with parameter variable FATAL
     in error message.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/drivers/ocean_solo.html"><filename>drivers/ocean_solo.F90</filename></ulink></term>
     <listitem>Remove redundant mpp_clock for Ocean.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../postprocessing/regrid/regrid.html"><filename>postprocessing/regrid</filename></ulink></term>
     <listitem>using netcdf library to read and write data, instead of
     using mpp_io_mod. Added vertical interpolation. Add namelist
     do_laplace_extrap to improve efficiency when doing vertical
     interpolation.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_core/ocean_domains.html"><filename>ocean_core/ocean_domains.F90</filename></ulink></term>
     <listitem>Added (len=*) for variable name in subroutine 
     set_ocean_domain.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_core/ocean_velocity_advect.html"><filename>ocean_core/ocean_velocity_advect.F90</filename></ulink></term>
     <listitem>Corrected bug identified by Pacanowski. For bottom
     partial cells with k=nk, the vertical advection of horizontal
     velocity was a factor of 2 too large. A mask has been added to
     correct this bug.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_core/ocean_grids.html"><filename>ocean_core/ocean_grids.F90</filename></ulink></term>
     <listitem>Send to diagnostics for area_u had id_area_t in
     send_data, trivial bug.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_core/ocean_topog.html"><filename>ocean_core/ocean_topog.F90</filename></ulink></term>
     <listitem>Added nml for flat_bottom for use in helping to debug
     problems related to bottom topography.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_core/ocean_freesurf.html"><filename>ocean_core/ocean_freesurf.F90</filename></ulink></term>
     <listitem>Added nml option to have eta_t = 0.0 at the initial
     condition. This is useful when have restart files that have nonzero
     eta, and wish to debug without changing the restart files.  Added
     nml option check_volume_conserve for debugging purposes.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_param/mixing/vert/kpp/ocean_vert_mix_coeff.html"><filename>ocean_param/mixing/vert/kpp/ocean_vert_mix_coeff.F90</filename></ulink></term>
     <listitem>Removed the tidal_mix option as this remains a topic of research.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_param/mixing/neutral/ocean_neutral_physics.html"><filename>ocean_param/mixing/neutral/ocean_neutral_physics.F90</filename></ulink></term>
     <listitem>Unified the calculation of the surface boundary layer.  Now include information
   about the KPP boundary layer in the computation of the "neutral physics boundary layer".</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_tracers/ocmip2_biotic.html"><filename>ocean_tracers/ocmip2_biotic.F90</filename></ulink></term>
     <listitem>Corrected bug identified by John Dunne. Bug fix necessary to keep model from bombing.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/mom4/ocean_param/sources/sponge/ocean_sponges.html"><filename>ocean_param/sources/sponge/ocean_sponges.F90</filename></ulink></term>
     <listitem>Removed code that inverted the input sponge coefficients.  The
     input sponge_coeff NetCDF file should now give these coefficients
     in inverse seconds, rather than in seconds.  Reasoning: (1)
     matches the  documentation; (2) more intuitively linked to the
     name "sponge_coeff," with a large coeff implying a strong sponge;
     and (3) allows tapering of sponge coefficients to exactly zero.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/mpp/mpp_domains.html"><filename>shared/mpp_domains.F90</filename></ulink></term>
     <listitem>Bug fix for C grid case, does not affect MOM4 since MOM4 runs on
                B grid.</listitem>
    </varlistentry>
    <varlistentry>
     <term><ulink url="../src/shared/mpp/mpp_update_domains2D.h"><filename>shared/mpp_update_domains2D.h</filename></ulink></term>
     <listitem>Bug fix for C grid case, does not affect MOM4 since MOM4 runs on B grid.</listitem>
    </varlistentry>
   </variablelist>
</section>
<section id="mom4p0c updates">
   <title>MOM4p0c updates</title>
   <para>
     The following lists some new features of the MOM4p0c release in
     August 2004. 

     <warning>
 <itemizedlist>
 
     <listitem>
      MOM4p0c will NOT bitwise reproduce earlier MOM4
      releases.  However, major changes in answers beyond roundoff
      differences should not be expected when running in an analogous
      configuration.
     </listitem>
     <listitem>
     mom4p0c code REQUIRES the use of mom4p0c datasets to avoid fatal error.
     </listitem>
 </itemizedlist>
	</warning>  

   <para>
     New or modified algorithms available in MOM4p0c
   </para>      
     
 <itemizedlist>
 
     <listitem>
      The time tendency for tracer and baroclinic velocity can be
      discretized two ways. (1) The first approach uses the
      traditional leap-frog method along with a Robert-Asselin time
      filter. (2) MOM4p0c provides an additional method, which is
      strongly recommended.  Here, the time tendency is discretized
      with a two-level forward step, which eliminates the need to time
      filter.  Tracer and velocity are staggered in time, thus
      providing second order accuracy in time.  For certain model
      configurations, this scheme is roughly twice as stable as the
      leap-frog, thus allowing for a factor of two in computational
      savings.  Without the time filtering needed with the leap-frog,
      the new scheme conserves total tracer to within numerical
      roundoff.  Extensive tests indicate that the simulations are
      quite similar qualitatively and quantitatively to those run with
      the leap-frog scheme.  However, the user is encouraged to verify
      such prior to moving forward with the new time stepping scheme.
      Note that the new scheme shares much in common with time
      stepping used in the Hallberg Isopycnal Model and the MIT GCM.
      This new scheme is the default in MOM4p0c.
      </listitem>

      <listitem>
       The barotropic mode can be updated using either the older
       leap-frog method, or a newer defaulted predictor-corrector
       method motivated by a similar method used in the Hallberg
       Isopycnal Model.
      </listitem>

      <listitem>
       Thickness weighted tracer concentration and thickness weighted
       baroclinic velocity are updated, rather than tracer
       concentration and velocity.  This new approach provides simpler
       conservation budgets, in which there is no longer a source-like
       term associated with the time tendency of the surface height.
      </listitem>     

      <listitem>
       Optimizations have been implemented to reduce array syntax and
       to improve parallelization.  This work is ongoing, with
       assistance from the MOM4 user community greatly appreciated.
      </listitem>

      <listitem>
       A new derived type has been introduced: ocean_thickness_type.
       This type absorbs elements of the ocean_grid_type that invove
       time dependent thicknesses of layers.  It is anticipated that
       this type will expand in the future as MOM4 evolves towards
       generalized vertical coordinates.  This change required
       interfaces changes.
      </listitem>

      <listitem>
       The Time derived type has been removed from the other derived
       types in order to simplify the definitions of the types. This
       change required interfaces changes.  
      </listitem>

      <listitem>
       The non-Boussinesq option has been jettisoned in order to
       simplify some of the code.  It is anticipated that the next
       release of MOM4 will be MOM4p1 (late 2004 or early 2005), and
       this code will include a pressure-coordinate option to allow
       for simpler implementation of non-Boussinesq
       kinematics/dynamics.
      </listitem>

</itemizedlist>


   <para>
     Corrected algorithms in MOM4p0c
   </para>      
     
 <itemizedlist>


      <listitem>
     The shortwave fraction computed in <ulink
     url="../src/mom4/ocean_param/sources/shortwave/ocean_shortwave_pen.html"><filename>
     mom4/ocean_param/sources/shortwave/ocean_shortwave_pen.F90</filename></ulink>
     was not constrained to monotonically decrease with depth.  In
     some cases, the fraction could spuriously increase.  A new nml
     logical has been introduced: enforce_sw_frac.  The default of
     this logical is true.  
     </listitem>
      
      <listitem>
      Tidal forcing in <ulink
     url="../src/mom4/ocean_core/ocean_freesurf.html"><filename>
     mom4/ocean_core/ocean_freesurf.F90</filename></ulink> has been
     corrected.  The older code had problems with the phases.
      </listitem>

</itemizedlist>

   <para>
     New features of the FMS infrastructure
   </para>      
     
 <itemizedlist>

       <listitem>
       Extensive work has been included to enhance the portability and
       flexibility of FMS codes. This work is ongoing, with assistance
       from the MOM4 user community greatly appreciated.
      </listitem>

     <listitem>
     The new version of <ulink
     url="../src/shared/time_manager/time_manager.html"><filename>shared/time_manager.f90
     </filename></ulink> requires that every dataset with a time
     dimension also have a calendar attribute associated with this
     time. This new attribute is now required because problems were
     found with the old time manager when running the model assuming a
     repeating annual cycle using the NOLEAP calendar type, yet
     without the datasets also having this calendar type.  A spurious
     shift in the date accumulated over time, which caused shifts in
     the forcing relative to what the model intended.  The calendar
     attribute is missing from many datasets released with mom4p0a and
     mom4p0b. Since the missing of calendar attribute would cause a
     fatal error in mom4p0c release, NEW datasets that
     have calendar attribute are required for mom4p0c release.	  
      </listitem>

      <listitem>
      Because getting NetCDF datasets in a proper format for FMS code
      remains a frustrating aspect of running MOM4, we have provided a
      new stand-alone utility that tests a data file for compatibility
      with FMS.  This utility is in
      <ulink
      url="../src/shared/time_interp/time_interp_external.html"><filename>shared/time_interp_external.F90</filename></ulink>
      and there is an associated run script at src/preprocessing/test_time_interp_ext that the user should
      modify for their machines.  Use of this utility to debug the
      datasets prior to running MOM4 can help to remove a significant
      level of frustration associated with building a new model with
      new datasets.
      </listitem>

      <listitem>
       Another substantial update to the FMS infrastructure involves
       the mpp code, such as <ulink
       url="../src/shared/mpp/mpp.html"><filename>shared/mpp.F90
       </filename></ulink>. This code has been significantly
       reorganized for easier understanding, and many new features
       have been added.  One new feature that has been found quite
       useful is that it is now possible to update a set of fields
       across processors after accumulating the full set, rather than
       sending each member individually.  In general, sending one very
       large package of data for mpp_update_domains is far more
       efficient than sending multiple smaller packages.  This new
       feature is most useful, for example, when sending multiple
       tracers or tracer tendencies for updates in modules such as
       ocean_neutral_physics.F90 and tracer advection.  (Note that
       only the Sweby advection scheme has been modified to allow for
       this improved efficiency.  Other schemes can be modified
       similarly.  Since they are not commonly used at GFDL, they have
       not been modified).
       </listitem>
</itemizedlist>
   </para>
</section>
     
    
<section id="mom4p0d updates">
   <title>MOM4p0d updates</title>
      <para>
 <itemizedlist>
 <listitem>
mom4p0d code employs the same data files as mom4p0c
</listitem>
     <listitem>
     Updates for mom4p0d are minimal within the mom4 portion of the
release. The main emphasis is with the associated code related to
preprocessing, postprocessing, and other elements of FMS.  The mom4p0d
release is based on the internal GFDL release of FMS known as "Lima."
     </listitem>
     <listitem>
    In mom4p0d release the Frequently Asked Questions (FAQ) have been
    extensively rewritten. The new <ulink url="http://www.gfdl.noaa.gov/~gtn/mom4_faq.html">
 FAQ </ulink> contains  many questions that have been discussed in the mom4p0 mailing list.
     </listitem>
 </itemizedlist>
    </para>
  <para>
     The following lists some new features of the MOM4p0d release in
     May 2005.   
</para><para>
<command>mom4 code</command>
</para>

 <itemizedlist> 
     <listitem><para>
ocean_param/mixing/horz/velocity/bih/general/ocean_bih_friction.F90</para>
- bug fix for biharmonic general friction in computation of the viscosity
  will CHANGE answer in test2	  
     </listitem>
     <listitem><para>
ocean_core/ocean_obc.f90</para>
- OBC now runs with static memory allocation	  
     </listitem>
     <listitem><para>
ocean_core/ocean_freesurf.F90</para>
- always initialize the tidal forcing, as tidal_forcing_init allocates 
some arrays which are used with the dynamical  allocation model.	  
     </listitem>
     <listitem><para>
mom4/ocean_core/ocean_grids.F90</para>
- add namelist option beta_plane and f_plane in ocean_grids_nml. With 
default value false.<para>
- fix bug that some diagnostics data axis is not in correct location.</para>	  
     </listitem>
     <listitem><para>
mom4/ocean_core/ocean_tracer.F90</para>
- fix the +0 and -0 restart reproducing problem for frazil in SGI/Irix.	  
     </listitem>
     <listitem><para>
ocean_diag/ocean_tracer_diag.F90</para><para>
ocean_diag/ocean_velocity_diag.F90</para><para>
mom4/ocean_param/sources/overflow/ocean_overflow.F90</para><para>
- add namelist do_bitwise_exact_sum to the diagnostic module. Set true 
to do bitwise exact global sum. When it is false, the global sum will be 
non-bitwise-exact, but will significantly increase efficiency. The default 
value is false.	</para>  
     </listitem>
     <listitem><para>
ocean_core/ocean_types.F90</para>
- convert pointer to allocatable array components in data type to improve 
effieciency on Altix machine when running in dynamic case.	  
     </listitem>
<listitem><para>
ocean_param/mixing/neutral/ocean_neutral_physics.F90
</para>
- removed unnecessary memory allocation when neutral physics is not used. <para>
- fixed incorrect index.</para>
- corrected update_domain for ustar and vstar, will not change answer,
 only affect diagnostics
 </listitem>
<listitem><para>
ocean_diag/ocean_tracer_util.F90 </para><para>
ocean_diag/ocean_adv_vel_diag.F90	  
</para>
- added Fortran intrinsic functions 
"maxloc" and "minloc" in a new algorithm for computing tracer_min_max
and/or maximum CFL number. 
These intrinsic functions allow for more vectorized algorithms, so 
should see some efficiency improvement especially on vector machines.	  
 </listitem>
<listitem>
mom4/ocean_param/sources/rivermix/ocean_riverspread.f90<para>
 -added "if(nspread==0) return" in spread_river_horz routine. Change the 
interface of spread_river_horz routine to avoid a possible aliasing.</para>
</listitem>
<listitem>
mom4/ocean_core/ocean_sbc.F90<para>
Compatible with the interface change of routine spread_river_horz in 
ocean_riverspread.f90.</para>	  
</listitem>
<listitem>
<programlisting>
mom4/ocean_param/sources/shortwave/ocean_shortwave_pen.F90
mom4/ocean_param/sources/xlandinsert/ocean_xlandinsert.f90
mom4/ocean_param/sources/xlandmix/ocean_xlandmix.f90
mom4/ocean_param/mixing/polarfilter/ocean_polar_filter.f90
mom4/ocean_param/mixing/sigma/ocean_sigma_diffuse.F90
mom4/ocean_param/mixing/horz/tracer/bih/ocean_horz_diffuse.f90
mom4/ocean_param/mixing/horz/tracer/lap/ocean_horz_diffuse.f90
mom4/ocean_param/mixing/horz/velocity/bih/const/ocean_bih_friction.f90
mom4/ocean_param/mixing/horz/velocity/bih/general/ocean_bih_friction.F90
mom4/ocean_param/mixing/horz/velocity/lap/const/ocean_lap_friction.f90
mom4/ocean_param/mixing/horz/velocity/lap/general/ocean_lap_friction.F90
mom4/ocean_param/mixing/vert/ocean_vert_mix.f90
mom4/ocean_param/mixing/vert/kpp/ocean_vert_mix_coeff.F90
</programlisting>
- removed unnecessary memory allocation if the corresponding module's namelist is false	  
</listitem>
	
 </itemizedlist>
<para>
<command>shared code</command>
</para><para>

<itemizedlist>	  
     <listitem>
A few minor changes have been made to MPP. Some have to do with extending shared
memory functionality within MPP. This includes a new file threadloc.c.	  
     </listitem>
     <listitem>
The file shared/mpp/include/os.h has been renamed and relocated to the top level
include/fms_platform.h	  
     </listitem>
     <listitem><para>
shared/diag_manager/diag_manager.f90</para><para>
- add standard_name to output fields.</para><para> 
- eliminate the need to pass Time to send_data for static fields</para><para>
- add code that writes the meta data associated with register fields
to an ascii file called "diag_field_log.out".</para>	  
     </listitem>
     <listitem><para>
shared/mpp/mpp_parameter.F90 and shared/mpp/mpp_domains_comm.F90</para>
-use Z instead of X for hexadecimal data	  
     </listitem>
     <listitem><para>
shared/axis_utils/axis_utils.F90 </para>
add a test program test_axis_utils. Remove unnecessary input grid to
avoid bad data in the input data. It shouldn't change solution for any
present experiments.	  
     </listitem>
     <listitem><para>
shared/time_interp/time_interp_external.F90 </para> 
Include filename/fieldname in error message of init_external_field.	  
     </listitem>
     <listitem><para>
shared/mpp/mpp_io_util.F90 </para>
bugfix in subroutine mpp_get_axes().	  
     </listitem>
 <listitem><para>
shared/horiz_interp/horiz_interp_spherical.f90 </para>
add a namelist "search_method" to horiz_interp_spherical_nml. The reason
is that the radial search may be not quite accurate in some cases. In this situation,
you can always set search_method to "full_search", which will be always accurate but
less efficiency comparing to "radial_search". "radial_search" is the default value.
In most cases, "radial_search" and "full_search" will produce same results other than
order of operation. With "radial_search", it is important to choose suitable max_dist
(an optional argument in horiz_interp_spherical_init).
 </listitem>
 <listitem><para>
 shared/mpp/mpp_io_read.F90  </para>
 change to fix some possible +0/-0 restart problem.
 </listitem>
 </itemizedlist>
</para><para>
<command>bin/mkmf, bin/mkmf.template.ibm </command>
</para>
<itemizedlist>
 <listitem><para>
update for IBM platform</para>
 </listitem>  
</itemizedlist>
<para>
<command>coupler/flux_exchange.f90</command>
</para><para>
- By default, the global exchange grid u_star will not be interpolated from
atmospheric grid. This is different from mom4p0c behavior and will change
answers. To reproduce old answers, use  </para><para>
        &amp;flux_exchange_nml ex_u_star_smooth_bug = .true.	      
</para><para>
<command>preprocessing</command>
</para>
<itemizedlist>
   <listitem><para>
preprocessing/mom4_prep/idealized_ic/idealized_ic.f90 </para>
-change the attribute cartesian_axis of zt from "z" to "Z".
  </listitem>
  <listitem>	<para>
preprocessing/mom4_prep/idealized_bc/idealized_bc.f90</para>
-fix the bug that variable yu1 is not initialized for option cosine_winds.
  </listitem>	
  <listitem>	<para>
preprocessing/generate_grids/make_xgrids/make_xgrids.c </para>
- remove the hardwired path to netcdf.h and update the compiling command
  </listitem>
  <listitem>
preprocessing/generate_grids/ocean/topog.f90<para>
- change the default value of nml interp_method from "spherical" to
"bilinear". Some code clean-up.	</para>  
     </listitem>
     <listitem>
preprocessing/regrid<para>
   This tools is based on postprocessing/regrid. It can 
regrid data from 2-D/3-D logical rectangular grid onto logical rectangular grid.
The interpolation will be non-conservative. Some tests shown that both forcing
data sets of mom4 test case restart files from mom4 test run and  can be used
as input source data for regridding. There is , however, no guarantee for all
the situations.	</para>  
     </listitem>
     <listitem>
preprocessing/regrid_2d <para>
    Some adjustments e.g. laplacian extrapolation will be done only when 
it is needed. </para>	  
     </listitem>
     <listitem>
preprocessing/regrid_3d<para>
    Replace nanmelist do_vertical_interp with use_source_vertical_grid. When 
use_source_vertical_grid is true, no vertical interpolation will be done.
Otherwise vertical interpolation will be done if the source and
destination grid have different vertical grid. Replace apply_dest_mask 
with apply_mask to add the option to allow source data mask to determine
destination data mask. Redesign the code to decrease the
memory usage.</para>	  
     </listitem>	
 </itemizedlist>

<command>postprocessing/regrid</command>
<para>
Redesign this regrid tool. Change the interpolation algorithm for tracer
field. Tracer field will be remapped using conservative scheme. The regridding
will be limited from any logical rectangular grid (tripolar of
latitude-longitude grid) to any latitude-longitude grid. Removed namelist
do_vertical_interp. This tool will not do vertical interpolation. The reason
is that the linear vertical interpolation will create some unwanted
noises.
</para>         
</section>

    
</section>
</article>
