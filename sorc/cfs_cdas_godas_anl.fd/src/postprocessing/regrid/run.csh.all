#!/bin/tcsh 
#=======================================================================
#      regrid_2d : interp 2-D data
#         Contact : Zhi Liang   email : z1l@gfdl.noaa.gov
#
#  This runscritp can be used to regrid data $src_data on any grid $src_grid to logically
#  rectangular grid described by grid descriptor file $dst_grid. 
#
#  This preprocessing program was tested on the sgi origin3000 system at GFDL.
#  In order to run on other system, some changes may be needed.

  set echo
#  set DEBUG                                                # uncomment this to debug your run with totalview
  set platform     = ibm                                    # A unique identifier for your platform
  set name         = "ICE"                         # name of the data file will be generated
  set npes         = 2                                      # number of processors
  set root         = $cwd:h #:h:h                             # The directory you created when you checkout
  set root         = $root:h
  set root         = $root:h
  set tooldir      = $cwd                                   # directory of the tool
  set sharedir     = $root/src/shared                       # directory of the shared code.
  set includedir   = $root/include
  set workdir      = $tooldir/workdir                       # where the tool is run and output is produced
  set executable   = $tooldir/exec/regrid.exe               # executable created after compilation
  set mkmfTemplate = $root/bin/mkmf.template.$platform  # path to template for your platform
  if ( $?DEBUG ) then
    set executable    = $tooldir/debug/regrid.exe 
    set mkmfTemplate  = $root/bin/mkmf.debugtemplate.$platform         
  endif
  set mkmf         = $root/bin/mkmf                     # path to executable mkmf
  set cppDefs      = ( "-Duse_netCDF -Duse_libMPI" )        # list of cpp #defines to be passed to the source files
#  if($npes == 1) set cppDefs  = ( "-Duse_netCDF" )

# input data file and destination grid
    set src_data       = /nbns/climate/wx20wn/mom4_day2month/ice_fortran/ice.nc
#    set grid_spec_file  = /emc4/wx20wn/INPUT_1x1_ICE/grid_spec.nc
#    set src_data        = $cwd/20020101.ice_day.nc
    set grid_spec_file  = $cwd/grid_spec_new.nc


#--------------------------------------------------------------------------------------------------------
# setup directory structure
  if ( ! -d $workdir )         mkdir $workdir

  cd $workdir

# get executable  
  cp $executable $executable:t
##       fld_name       = 'CN','FRAZIL','HI','HS','TS','T1','T2','ALB','SW','LW','SH','LH','UI','VI','SST','SSS','SSH','UO','VO'
##       fld_pos        =  'T','T','T','T','T','T','T','T','T','T','T','T','C','C','T','T','T','C','C'

# --- set up namelist

    cat >input.nml <<!
    &regrid_nml
       src_data       = '$src_data',
       grid_spec_file = '$grid_spec_file',
       dst_data       = '$name.nc',
       num_flds       = 19
       fld_name       = 'CN','FRAZIL','HI','HS','TS','T1','T2','ALB','SW','LW','SH','LH','UI','VI','SST','SSS','SSH','UO','VO'
       fld_pos        =  'T','T','T','T','T','T','T','T','T','T','T','T','C','C','T','T','T','C','C'
       vector_fld     = .false.
       debug          = .false. /
!

#  run the executable

 $executable:t >fms.out
 
  cat fms.out
       
#---------------------------------------------------------------------
# rename the ascii output file
  mv fms.out $name.fms.out

  unset echo
